[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Darius Andreas Görgen  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. wapoR Copyright (C) 2020 Darius Andreas Görgen This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/introduction.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Introduction","text":"{mapme.agriculture} facilitates analysis agricultural productivity based FAO WaPOR data (FAO 2019). allows calculation Net Biomass Water Productivity, indicator currently provided 100 meter resolution expected related crop productivity gross estimate counterpart, additional indicators water use efficency agricultural productivity. {mapme.agriculture} meant users least basic GIS Remote Sensing background. supports calculation number indicators concerned agricultural productivity. Users need least basic knowledge regarding concepts behind operating, (pre-) processing analyzing EO data. package retrieves available data REST API via json-based queries. Additionally, provides functions calculate number indicators can used analyse dynamics agricultural productivity. available datasets can hard understand present important data calculation supported indices detail .","code":""},{"path":"/articles/introduction.html","id":"mapme-agriculture-package","dir":"Articles","previous_headings":"","what":"{mapme.agriculture} package","title":"Introduction","text":"{mapme.agriculture} combines convenient download API query download FAO WaPOR data location African continent calculation agricultural productivity indicators based data sets. implemented functionality calculate Net Biomass Water Productivity (NBWP) sheds accurate light production biomass terms water used. set indicators available describe pixel-based productivity relation overall productivity area interest. pixel-wise information can aggregated, e.g. based field geolocations, calculating zonal statistics. Additionally, trends diff--diff comparisons supported describe dynamics indicators time.","code":""},{"path":"/articles/introduction.html","id":"functionalities","dir":"Articles","previous_headings":"","what":"Functionalities","title":"Introduction","text":"Currently, package offers several functionalities, ideally used consecutive manner order realize image preparation workflow: query download input data specific space-time location calculate seasonal transpiration net biomass water productivity process input data calculate productivity indicators optionally extract zonal statistics areas interest","code":""},{"path":"/articles/introduction.html","id":"inputs-outputs","dir":"Articles","previous_headings":"","what":"Inputs, Outputs","title":"Introduction","text":"bounding box area interest temporal window download process FAO WaPOR data optionally, zonal statistics shall extracted, areas shall handed function sf-object output functionality processed raster files GeoTiff format certain land cover categories optionally zonal statistics indicators provided sf-objects.","code":""},{"path":"/articles/introduction.html","id":"limitations","dir":"Articles","previous_headings":"","what":"Limitations","title":"Introduction","text":"package focuses calculation mentioned indicators based 100 meter resolution data sets. data can downloaded package, advised use data subsequent analysis package. case wish analyze datasets can use download functionality provided , write analysis scripts. available indicators limited indicators easy calculate without need external datasets deliver important information. case interested elaborated indicators concerned water balancing advised check Python tool WaporTranslator. landcover classification based year 2015. rainfed irrigated agriculture determined yearly basis. Thus data generally suitable land cover change analysis except two mentioned classes. planning add new features extend functionality {mapme.vegetation}, address limitations best possible.","code":""},{"path":"/articles/introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction","text":"FAO. 2019. “WaPOR Database Methodology: Level 3 Data – Using Remote Sensing Support Solutions Reduce Agricultural Water Productivity Gaps,” 68pp. http://www.fao.org/3/ca3750en/ca3750en.pdf.","code":""},{"path":"/articles/usage.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Calculate Productivity Indicators","text":"documentation presenting use mapme.wapor package download process data sets FAO WaPOR API calculate several indices assess biomass water productivity. WaPOR makes available several layers different resolutions concerned agricultural productivity. package can used download several layers, focus ones required calculate supported productivity indices. product : Total Biomass Productivity (TBP): data layer indicates total biomass production (kg/ha) two distinct seasons every year Phenology (PHE): data layer indicates decade start end season given pixel detected. used aggregate indicators according length respective season Land Cover Classifcation (LCC): data layer delivers broad classification scheme land cover /land use used focus analysis specific land covers Transpiration (T): data layer indicats decadal transpiration values (mm) pixel. used calculate total amount transpired water plants length growing season Gross Biomass Water Productivity (GBWP): data layer indicates amount water used production biomass (kg/m³). gross estimate besides plant transpiration also soil evaporation interception included. package calculate net biomass water productivity based transpiration layer","code":"library(mapme.agriculture) library(sf) library(terra) library(dplyr)"},{"path":"/articles/usage.html","id":"download-input-data","dir":"Articles","previous_headings":"","what":"Download input data","title":"Calculate Productivity Indicators","text":"mentioned products needed functions work properly. can use download function download products well, however, scope vignette. code chunk show download utility can used query spatio-temporal domain download. Note need personal API key can acquired user section WaPOR website. function call download queried products data directory. Note downloading larger raster extents can take FAO server need process query. Make sure increase sleep time function appropriate value avoid querying server frequently current status.","code":"aoi = st_read(system.file(\"extdata\", \"aoi.gpkg\", package = \"mapme.agriculture\")) aoi = st_transform(aoi, 4326) # transform to WGS84 because the API expects lat/lon coordinates collection = \"WAPOR_2\" # wapor colletion 2.0 products = list(\"TBP\" = \"L2_TBP_S\",                 \"PHE\" = \"L2_PHE_S\",                 \"LCC\" = \"L2_LCC_A\",                  \"T\" = \"L2_T_D\",                 \"GBWP\" = \"L2_GBWP_S\") # The products we want to download  begin = as.Date(\"2009-01-01\") # begin date is inclusive end = as.Date(\"2015-01-01\") # end date is exclusive APIkey = \"<-your key goes here->\" # can be obtained in the profile section of the WAPOR website  dir.create(\"data\")  for(i in 1:length(products)){ # download products in a loop   wapor_queryRaster(collection = collection,                     product = products[[i]],                     aoi = aoi,                     begin = begin,                     end = end,                      APIkey = APIkey,                      outdir = system.file(\"extdata\", \"input\", package = \"mapme.agriculture\"),                      cutline = FALSE,                      tiled = TRUE,                      compressed = TRUE,                      overviews = TRUE,                     sleep_time = 2) # increase sleep time for larger extents to avoid being banned  }"},{"path":"/articles/usage.html","id":"calculation-of-nbwp","dir":"Articles","previous_headings":"","what":"Calculation of NBWP","title":"Calculate Productivity Indicators","text":"package deliver previously downloaded raster files showcase can process . first step calculate Net Biomass Water Productivity, ratio biomass produced transpiration . provide wapor_nbwp function. Note NBWP can calculated data transpiration previous year well complete following year available. reason , depending globe, growing season might start previous year might well extend following year. also earliest year can calculate NBWP 2010, WaPOR transpiration data available 2009 onwards. function cause error either year 2010 queried last year later previous year time function called. Besides numeric vector indicating years interested need supply function single character vector input files. Note names files follow certain standard changed download. Additionally, specify output directory two new directories created. first step function sums seasonal total sum transpiration outputs rasters directory called “T_S”. next step seasonal total biomass production divided seasonal transpiration get NBWP. rasters written directory called “NBWP”. can take look NBWP files first season.","code":"input_files = list.files(system.file(\"extdata\", \"input\", package = \"mapme.agriculture\"), recursive = T, pattern = \".tif\", full.names = T) dir.create(system.file(\"extdata\", \"intermediate\", package = \"mapme.agriculture\"), showWarnings = F) nbwp_files = wapor_nbwp(input_files = input_files,                         years = 2010:2014,                          outdir = system.file(\"extdata\", \"intermediate\", package = \"mapme.agriculture\"),                         verbose = T) #> Starting calculation for year 2010. #> Starting to mask raster files according to mask values... #> Starting calculation of seasonal transpiration for season S1... #> Starting calculation of seasonal transpiration for season S2... #> Starting calculation of seasonal NBWP... #> Starting calculation for year 2011. #> Starting to mask raster files according to mask values... #> Starting calculation of seasonal transpiration for season S1... #> Starting calculation of seasonal transpiration for season S2... #> Starting calculation of seasonal NBWP... #> Starting calculation for year 2012. #> Starting to mask raster files according to mask values... #> Starting calculation of seasonal transpiration for season S1... #> Starting calculation of seasonal transpiration for season S2... #> Starting calculation of seasonal NBWP... #> Starting calculation for year 2013. #> Starting to mask raster files according to mask values... #> Starting calculation of seasonal transpiration for season S1... #> Starting calculation of seasonal transpiration for season S2... #> Starting calculation of seasonal NBWP... #> Starting calculation for year 2014. #> Starting to mask raster files according to mask values... #> Starting calculation of seasonal transpiration for season S1... #> Starting calculation of seasonal transpiration for season S2... #> Starting calculation of seasonal NBWP... plot(rast(nbwp_files[grep(\"S1\", nbwp_files)]))"},{"path":"/articles/usage.html","id":"calculate-productivity-indicators","dir":"Articles","previous_headings":"","what":"Calculate productivity indicators","title":"Calculate Productivity Indicators","text":"next step interested calculating number indices NBWP well input files. supported indices following: land cover statistics: mode median landcover, year breakpoint, frequency specified land cover classes presence double season certain pixel yearly values raw values TBP, GBWP, NBWP Global Land Productivity: Based TBP, GBWP, NBWP, ratio pixel achieves certain year comparison 95%-quantile across years Yearly Land Productivity: except threshold value calculated basis 95%-qunatile year differences epochs: raw parameters productivity indices averaged two epochs difference two values returned linear trends raw parameters productivity indicators: raster two layers, first estimate trend, second p-value can use wapor_indices function calculate complete raster set written specifed output directory. land cover classification map can used restrict calculation certain land cover types. mask_values omitted raster files masked prior calculation. Note can specify number cores parallel computation. However, advised use functionality large rasters. example, calculating indices based rasters delivered package parallel processing substantially increase computation time extent rather small. Let’s visualize land productivity indicators one selected land cover classes. start visualizing global indicator.  Now move visualize parameter time based yearly threshold.  Differences subtle, note indicators calculated pixels respective land cover classification found correspond value 20. can quickly cross-check visualizing input land cover classification.","code":"input_files2 = c(input_files, nbwp_files) index_files = wapor_indices(input_files2,                              years = 2010:2014,                              mask_values = c(20,30),                              ncores = 1,                              epoch1 = 2010:2012,                              epoch2 = 2013:2014,                              outdir = system.file(\"extdata\", \"output\", package = \"mapme.agriculture\"),                             overwrite = TRUE) #> Starting to mask LCC... #> Calculation of LCC metrics... #> Calculation to mask global productivity metric... #> Calculation to mask yearly productivity metric... #> Calculation of epoch differences... #> Calculation of trends. This could take a while... #> Double season identification... #> Calculation differences in season numbers... #> Writting output to disk... #> Done! plot(rast(index_files[grep(\"20-nbwp-s1-lp1_global.tif\", index_files)])) plot(rast(index_files[grep(\"20-nbwp-s1-lp1_yearly.tif\", index_files)])) lcc = rast(input_files[grep(\"LCC\", input_files)]) lcc[lcc !=  20] = NA plot(lcc)"},{"path":"/articles/usage.html","id":"extract-zonal-statistics","dir":"Articles","previous_headings":"","what":"Extract zonal statistics","title":"Calculate Productivity Indicators","text":"Since now calculated indices next step interested extracting information summarizing per polygon. showcase functionality included additional vector data set number polygons study area.  extraction, simply specify path index files well aoi wapor_extract function. give us list different tibble objects representing different levels indicator extraction. output see first object find main land cover statistcs. second object, land cover frequency specified mask values found. third object get averaged yearly values raw parameters well productivity indicators. fourth object number double seasons indicated difference double seasons epochs found fifth object. raw parameters productivity indicators difference epochs found sixth object trend parameters found last one. Note, returned tibbles formatted long format. column ID specifies index relation inputted aoi object. Thus wish combine certain table original aoi object can proceed follows:","code":"aoi2 = st_read(system.file(\"extdata\", \"aoi2.gpkg\", package = \"mapme.agriculture\")) #> Reading layer `aoi2' from data source  #>   `/home/runner/work/_temp/Library/mapme.agriculture/extdata/aoi2.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 10 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 36.62841 ymin: 13.27759 xmax: 36.69996 ymax: 13.35452 #> Geodetic CRS:  WGS 84 plot(lcc[[1]])  plot(aoi2, add = T) extracted_values = wapor_extract(index_files, aoi2) str(extracted_values, 2) #> List of 7 #>  $ lcc_stats          : tibble [49 × 3] (S3: tbl_df/tbl/data.frame) #>  $ lcc_freq           : tibble [20 × 4] (S3: tbl_df/tbl/data.frame) #>  $ indices            : tibble [1,800 × 7] (S3: tbl_df/tbl/data.frame) #>  $ double_seasons     : tibble [100 × 5] (S3: tbl_df/tbl/data.frame) #>  $ double_seasons_diff: tibble [20 × 4] (S3: tbl_df/tbl/data.frame) #>  $ epoch_diffs        : tibble [240 × 7] (S3: tbl_df/tbl/data.frame) #>  $ trends             : tibble [720 × 7] (S3: tbl_df/tbl/data.frame) aoi2$ID = 1:nrow(aoi2) left_join(aoi2, extracted_values$indices) #> Joining, by = \"ID\" #> Simple feature collection with 1800 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 36.62841 ymin: 13.27759 xmax: 36.69996 ymax: 13.35452 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    id ID year     value class parameter season  indicator #> 1   1  1 2010 0.8484247    20      gbwp     s1 lp1_global #> 2   1  1 2011 0.5608977    20      gbwp     s1 lp1_global #> 3   1  1 2012 0.8596461    20      gbwp     s1 lp1_global #> 4   1  1 2013 0.9893828    20      gbwp     s1 lp1_global #> 5   1  1 2014 0.8706949    20      gbwp     s1 lp1_global #> 6   1  1 2010 0.8675581    20      gbwp     s1 lp1_yearly #> 7   1  1 2011 0.9136670    20      gbwp     s1 lp1_yearly #> 8   1  1 2012 0.9292712    20      gbwp     s1 lp1_yearly #> 9   1  1 2013 0.8974670    20      gbwp     s1 lp1_yearly #> 10  1  1 2014 0.8717483    20      gbwp     s1 lp1_yearly #>                              geom #> 1  POLYGON ((36.62841 13.35452... #> 2  POLYGON ((36.62841 13.35452... #> 3  POLYGON ((36.62841 13.35452... #> 4  POLYGON ((36.62841 13.35452... #> 5  POLYGON ((36.62841 13.35452... #> 6  POLYGON ((36.62841 13.35452... #> 7  POLYGON ((36.62841 13.35452... #> 8  POLYGON ((36.62841 13.35452... #> 9  POLYGON ((36.62841 13.35452... #> 10 POLYGON ((36.62841 13.35452..."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Darius Görgen. Maintainer, author. MAPME-Initiative. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Görgen D (2021). mapme.agriculture: Access FAO WaPOR data agricultural monitoring. R package version 0.0.0.9000.","code":"@Manual{,   title = {mapme.agriculture: Access to FAO WaPOR data for agricultural monitoring},   author = {Darius Görgen},   year = {2021},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"about-mapme","dir":"","previous_headings":"","what":"About MAPME","title":"An R package for processing FAO WaPOR data","text":"MAPME initiative KfW, MapTailor Geospatial Consulting, Agence Française de Développement provide free open access GIS tools Earth observation international development cooperation. MAPME community-driven initiative jointly develop tools solutions help us plan, monitor evaluate projects help earth observation Geographical Information Systems (GIS). MAPME repositories contain R codes allow generate various statistics land use / land cover vegetation trends gain insights project area – methods can – example – used assess outcome indicators # monitoring progress projects. time , MAPME repositories encompass three main functionalities: Analyze, maps quantify land use / land cover (LULC), change forest cover cropland via  {mapme.forest} {mapme.classification}packages. vegetation productivity change trend assessments, e.g. map landscape degradation rehabilitation via {mapme.vegetation} package Assessing agricultural productivity FAO WaPOR platform via package","code":""},{"path":"/index.html","id":"about-this-package","dir":"","previous_headings":"","what":"About this package","title":"An R package for processing FAO WaPOR data","text":"mapme.agriculture R package supports users query, download process data FAO WaPOR API. data provided FAO covers African continent Middle East. can used assess agricultural productivity water consumption crops plants. package helps quickly query download necessary data files conduct analysis agricultural productivity related biomass production amount water used crops vegetation types. WaPOR data available different spatial resolutions (30, 100m, 250m) complete African continent starting year 2009. exist finer resolution data selected locations, 100 meter product primary importance {mapme.agriculture} package. primary function calculate net biomass water productivity, amount water used crops plants produce biomass. Based parameter well others, several indicators productivity calculated pixel basis. allows pixel-wise trend calculation well comparison epochs, e.g. pre-post analysis project interventions. examplary map net biomass water productivity.","code":""},{"path":"/index.html","id":"ressources","dir":"","previous_headings":"","what":"Ressources","title":"An R package for processing FAO WaPOR data","text":"tutorial usage {mapme.agriculture} can found . Please visit page order get know API {mapme.agriculture}.","code":""},{"path":"/reference/check_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check the status of a response object — check_status","title":"Helper function to check the status of a response object — check_status","text":"Parses error number message","code":""},{"path":"/reference/check_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check the status of a response object — check_status","text":"","code":"check_status(res)"},{"path":"/reference/check_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check the status of a response object — check_status","text":"res httr response object.","code":""},{"path":"/reference/find_break.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate breakpoints — find_break","title":"Calculate breakpoints — find_break","text":"Calculate breakpoints","code":""},{"path":"/reference/find_break.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate breakpoints — find_break","text":"","code":"find_break(x)"},{"path":"/reference/find_break.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate breakpoints — find_break","text":"x numeric vector","code":""},{"path":"/reference/find_break.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate breakpoints — find_break","text":"index breakpoint NA","code":""},{"path":"/reference/get_and_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to query an URL — get_and_parse","title":"Helper function to query an URL — get_and_parse","text":"Helper function query URL","code":""},{"path":"/reference/get_and_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to query an URL — get_and_parse","text":"","code":"get_and_parse(url)"},{"path":"/reference/get_and_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to query an URL — get_and_parse","text":"url Character vector url","code":""},{"path":"/reference/get_and_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to query an URL — get_and_parse","text":"parsed content response. error message cases GET request fails","code":""},{"path":"/reference/wapor_collections.html","id":null,"dir":"Reference","previous_headings":"","what":"List collections at FAO GISManager — wapor_collections","title":"List collections at FAO GISManager — wapor_collections","text":"function lists available data collections FAO GISManager API. code name used functions caption (e.g.) long name returned. function equivalent wapor_collection() returns metadata singular data collection.","code":""},{"path":"/reference/wapor_collections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List collections at FAO GISManager — wapor_collections","text":"","code":"wapor_collections()"},{"path":"/reference/wapor_collections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List collections at FAO GISManager — wapor_collections","text":"data.frame object code captions available collections.","code":""},{"path":"/reference/wapor_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and summarize index values per polygon — wapor_extract","title":"Extract and summarize index values per polygon — wapor_extract","text":"function can used extract summarise data output wapor_indices function polygon basis. data returned list object several tables long-format. objects : Land Cover Statistics (lcc_stats): breakpoint, median land use, modal land use Land Cover Frequency (lcc_freq): averaged frequency occurence selected land cover classes Indices (indices): Averaged yearly statistics raw parameters well LP1_global LP1_yearly Double Season: Class specific occurence double seasons per year Double Season Difference: Difference number double season pre- post epoch Epoch Differences: Differences productivity raw parameters Trends: Estimates p-values linear trend per parameter","code":""},{"path":"/reference/wapor_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and summarize index values per polygon — wapor_extract","text":"","code":"wapor_extract(input_files, aoi)"},{"path":"/reference/wapor_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and summarize index values per polygon — wapor_extract","text":"input_files charachter vector pointing complete set output files wapor_indices() function aoi sf-object optionally multiple polygons extract index information.","code":""},{"path":"/reference/wapor_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and summarize index values per polygon — wapor_extract","text":"list tibble objects. See decription details.","code":""},{"path":"/reference/wapor_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate WaPOR productivity indices — wapor_indices","title":"Calculate WaPOR productivity indices — wapor_indices","text":"function calculates several productivity indices based WaPOR inputs. Users can specify vector classes calculate metrics. land cover classification mask layers calculated indices returned seperatly class. function writes raster files calculated indices specified output directory. calculated indices : Land Use Median (lcc_median) Land Use Mode (lcc_mode) Land Use Frequency (lcc_freq) Breakpoint year land use change (lcc_break) Global productivity index (LP1_global) Yearly productivity index (LP2_yearly) Epoch differences (epoch_diff) Linear trends (trend) Number double seasons (double_season)","code":""},{"path":"/reference/wapor_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate WaPOR productivity indices — wapor_indices","text":"","code":"wapor_indices(   input_files = NULL,   years,   mask_values,   ncores = 1,   epoch1 = 2010:2011,   epoch2 = 2012:2014,   outdir,   overwrite = TRUE,   verbose = T )"},{"path":"/reference/wapor_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate WaPOR productivity indices — wapor_indices","text":"input_files character vector pointing raster files Land cover classification (LCC), Total Biomass Productivity (TBP), Net Biomass Water Productivity (NBWP), Gross Biomass Water Produtivity (GBWP). years years calculate indices. mask_values numeric vector indicatiing class codes calculate indices. ncores number cores used parallel processing index calculations. epoch1 vector years representing first epoch epoch comparisons. epoch2 vector years representing second epoch epoch comparisons. outdir charachter vector pointing output directory. overwrite Logical wether overwrite existing raster files. verbose logical indicating informative messages printed.","code":""},{"path":"/reference/wapor_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate WaPOR productivity indices — wapor_indices","text":"character vector pointing output files.","code":""},{"path":"/reference/wapor_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate WaPOR productivity indices — wapor_indices","text":"applicable, mentioned metrics calculated Net Biomass Water Productivity (NBWP), Gross Biomass Water Productivity (GBWP), Total Biomass Production (TBP) productivity indices seperatly. denoted resulting filename structured according : int-measurment-season-index.tif. E.g. filename land use class 30 trend NBWP first season looks like : \"30-nbwp-s1-raw-trend.tif\"","code":""},{"path":"/reference/wapor_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FAO GIS get product metadata — wapor_metadata","title":"FAO GIS get product metadata — wapor_metadata","text":"function retrieves metadata specific product within collection. returned object three-leveled list first object containing general information product. second object contains information dimensions data set associated wile third element contains additional metadata e.g. spatio-temporal resolution methodology product generated.","code":""},{"path":"/reference/wapor_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FAO GIS get product metadata — wapor_metadata","text":"","code":"wapor_metadata(collection, product)"},{"path":"/reference/wapor_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FAO GIS get product metadata — wapor_metadata","text":"collection length one character vector specifying collection. product length one character vector specifying product..","code":""},{"path":"/reference/wapor_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FAO GIS get product metadata — wapor_metadata","text":"list object obhects info, dimensions, meta.","code":""},{"path":"/reference/wapor_nbwp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Net Biomass Water Productivity — wapor_nbwp","title":"Calculate Net Biomass Water Productivity — wapor_nbwp","text":"function used calculate seasonal net water productivity based phenologocial information (PHE) seasonal total biomass production (TBP). Additionally, LCC land use mask can used restrict analysis pixels certain class. function writes seasonal total sum transpiration (T_S) net biomass productivity (NBWP) respective directories output directory.","code":""},{"path":"/reference/wapor_nbwp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Net Biomass Water Productivity — wapor_nbwp","text":"","code":"wapor_nbwp(   input_files = NULL,   years = NULL,   aoi = NULL,   verbose = TRUE,   outdir = \".\" )"},{"path":"/reference/wapor_nbwp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Net Biomass Water Productivity — wapor_nbwp","text":"input_files character vector file paths seasonal phenological metrics (PHE), decadal transpiration (T), seasonal total biomass production (TBP) possibly annual land cover classification (LCC). years years calculate NBWP numeric vector. Note, NBWP can calculated years data previous subsequent years available. Usually means earliest possible starting year 2010 data availability starts 2009. latest possible year NBWP can calculated usually two years current year. aoi optional sf object can used set calculation NBWP bounding box. verbose logical indicating informative messages printed. outdir character vector indicating directory output shall written . function create two new sub-directories (T_S NBWP) overwrite potentially already available files sub-directories.","code":""},{"path":"/reference/wapor_nbwp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Net Biomass Water Productivity — wapor_nbwp","text":"character vector file locations NBWP rasters.","code":""},{"path":"/reference/wapor_products.html","id":null,"dir":"Reference","previous_headings":"","what":"FAo GIS List available Products in collection — wapor_products","title":"FAo GIS List available Products in collection — wapor_products","text":"function lists available datasets within collection. result returned list element represents distinct product named accordingly. One level lower, two objects one containing general information product one containing additional metadata, spatio-temporal resolution, extent space time, coordinate system etc.","code":""},{"path":"/reference/wapor_products.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FAo GIS List available Products in collection — wapor_products","text":"","code":"wapor_products(collection)"},{"path":"/reference/wapor_products.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FAo GIS List available Products in collection — wapor_products","text":"collection character vector length one specifying collection retrieve available products-","code":""},{"path":"/reference/wapor_products.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FAo GIS List available Products in collection — wapor_products","text":"list object available products. One product object contains two data.frames product meta meta can variable column number due differences available meta data.","code":""},{"path":"/reference/wapor_queryRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the FAO database for a specific raster product — wapor_queryRaster","title":"Query the FAO database for a specific raster product — wapor_queryRaster","text":"function used query specific raster product FAO Gismanager. data sets within database vary greatly different collection function uses easily abstractable pattern query. Users can simply query specific product collection given spatio-temporal extent download available dimensions. case user's want download specific dimensions product can speicifed list object dimension argument. Note temporal dimensions need specified since derived automatically. function requires valid API key FAO Gismanager. User's can additionally specify processing applied resulting raster file valid pixel range cut borders aoi object, tiling overview creation raster raster shall compressed. Note process increase processing time server-side.","code":""},{"path":"/reference/wapor_queryRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the FAO database for a specific raster product — wapor_queryRaster","text":"","code":"wapor_queryRaster(   collection = NULL,   product = NULL,   dimensions = list(),   aoi = NULL,   begin = NULL,   end = NULL,   APIkey = NULL,   outdir = \".\",   cutline = FALSE,   tiled = FALSE,   compressed = FALSE,   overviews = FALSE,   sleep_time = 5,   stubbornness = 50 )"},{"path":"/reference/wapor_queryRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the FAO database for a specific raster product — wapor_queryRaster","text":"collection length one charachter vector indication collection queried product found. product length one character vector indicating desired product download. dimensions list object specifying dimensions product expect time measurment dimensions. dimensions needs specified form dimensions = list(KEY = \"value\"). cases products temporal measurement dimension empty list handed function. also Default. aoi sf object bounding box used clip raster extent. relevant regional global datasets clipping desired. Simply omit option want download complete dataset (e.g. global dataset local dataset WAPOR L3 data). function issue warning cases extent set global/regional. begin length one character form \"YYYY-MM-DD\" Date object format. time parameter inclusive meaning timestemps equal higher begin included. end length one character form \"YYYY-MM-DD\" Date object format. parameter exclusive meaning timestemps lower end included. APIkey length one character containing API key. Can obtained profile section https://wapor.apps.fao.org. outdir length one character vector existing directory. output files written . cutline logical indicating whether resulting raster cut bounding box aoi object. relevant aoi specified. tiled Logical whether resulting raster file tiled. compressed Logical indicate resulting raster compressed using LZW. overviews Logical indicate overviews resulting raster created. sleep_time numeric value indicating length time R sleeps checking availability result seconds. Depending size queried raster (e.g. global extent high spatial resolution) might good idea increase sleep time. Defaults 10 seconds. stubbornness Number maximum iterations function query server result one raster query. length one iteration derived sleep_time argument. maximum number iterations reached server finish calculation function return error.","code":""},{"path":"/reference/wapor_queryRaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the FAO database for a specific raster product — wapor_queryRaster","text":"Nothing. function downloads raster files FAO WaPOR API specific output directory.","code":""},{"path":"/reference/wapor_signin.html","id":null,"dir":"Reference","previous_headings":"","what":"Sign in with API key at FAO GISManager to retrieve access token — wapor_signin","title":"Sign in with API key at FAO GISManager to retrieve access token — wapor_signin","text":"Function used internally sign parse access_token.","code":""},{"path":"/reference/wapor_signin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sign in with API key at FAO GISManager to retrieve access token — wapor_signin","text":"","code":"wapor_signin(APIkey)"},{"path":"/reference/wapor_signin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sign in with API key at FAO GISManager to retrieve access token — wapor_signin","text":"APIkey length one character containing user-specific API key.","code":""},{"path":"/reference/wapor_signin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sign in with API key at FAO GISManager to retrieve access token — wapor_signin","text":"access token.","code":""}]
